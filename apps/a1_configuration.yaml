# Configurations for the robot

# XML file location
robot_xml: "/home/zolkin/AmberLab/bilevel-gait-gen/models/a1_description/xml/a1.xml"

robot_urdf: "/home/zolkin/AmberLab/bilevel-gait-gen/models/a1_description/urdf/a1.urdf"

collision_frames: ["FL_foot", "FR_foot", "RL_foot", "RR_foot"]    # for pinocchio
collision_bodies: [4, 7, 10, 13]  # for mujoco
# these need to match ^

foot_type: "POINT_FEET"

## ----------------------- Configurations ----------------------- ##
# Note: All configs should match pinocchio!

# initial joint config
# xp, yp, zp, qw, qx, qy, qz, q0, ..., q11 - note that the angles are quaternions and need to be normalized
init_config: [0., 0., 0.3, 0, 0, 0, 1.0, # -0.0004, 0.004, 0.0001,
              -0.02, 0.9, -1.6,       # front left
              0.02, 0.9, -1.6,        # front right
              0.02, 0.9, -1.6,        # rear left
              -0.02, 0.9, -1.6]       # rear right
#  [0., 0., 0.3341, 1., 0, 0, 0,
#              -0.02, 1.5, -1.75, # -0.976,     # front right
#              0.02, 0.2, -1.25, # -0.977,      # front left
#              -0.08, 0.2, -1.25, # -1.03,       # rear right
#              0.08, 1.5, -1.75] # -1.03]        # rear left
#init_config: [0., 0., 0.3541, 1., 0, 0, 0, # -0.0004, 0.004, 0.0001,
#              -0.02, 0.2, -0.977,     # front right
#              0.02, 0.524, -1.63,      # front left
#              -0.08, 0.498, -1.57,       # rear right
#              0.08, 0.45, -1.03]
# initial joint velocity
# xv, yv, zv, angle rates, v0, ..., v11
init_vel: [0., 0., 0., 0., 0., 0.,
           0., 0., 0.,
           0., 0., 0.,
           0., 0., 0.,
           0., 0., 0.]

#standing_config: [0., 0., 0.36, 1., 0., 0., 0.,
#                 -0.05, 0.2, -0.91,
#                 0.05, 0.2, -0.91,
#                 -0.0788, 0.6, -.91
#                 0.0798, 0.6, -.91]

target_config: [0., 0., 0.361, 0, 0, 0, 1.0,
                -0.02, -1, -0.977,     # front left
                0.02, 0.2, -0.977,     # front right
                0.08, 0.45, -1.03,     # rear left
                -0.08, 0.45, -1.03]    # rear right

standing_vel: [0., 0., 0., 0., 0., 0.,
               0., 0., 0.,
               0., 0., 0.,
               0., 0., 0.,
               0., 0., 0.]


#SRBD Configs:
#srb_init: [0, 0, 0.3541,
#            0, 0, 0,
#            0, 0, 0, 1,
#            0, 0, 0]

srb_init: [0, 0, 0.3, # this 0.3 is kinda useful
           0, 0, 0, #4.404,   -0.001,    0.957, # 6, 6 for x, y vel give some cool results
           0, 0, 0, 1, # 0.0505,   -0.1643,   -0.0572,    0.9835,
           0, 0, 0]

## ----------------------- Low Level Controller ----------------------- ##
controller_type: "QP_CONTROL"   # or PD_GRAV_COMP
control_rate: 1000  # Hz
torque_bounds: [30, 30, 30,
                30, 30, 30,
                30, 30, 30,
                30, 30, 30] # 33.5, 100
#  [100, 100, 100,
#   100, 100, 100,
#   100, 100, 100,
#   100, 100, 100]
friction_coef: 0.6 #0.3 - note problem can be sensitive to this with the gait opt

# TODO: Tune
# 1000, 5000
base_pos_gains: [8000, 9000]  # kd_pos, kp_pos  need the kd~100 and kp~1000 and the torso having higher weight to override the legs significantly
base_ang_gains: [600, 1000]  # kd_ang, kp_ang, on morning of 2/26 these were 60, 100

# The following are tuned for when vdes = 0
# 5000, 300 works well for the QP controller
kp_joint_gains: [5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500]
kd_joint_gains: [300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300] # 300

#kp_joint_gains: [5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500, 5500]
#kd_joint_gains: [300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300]

leg_tracking_weight: 10 #10
torso_tracking_weight: 100 #10
force_tracking_weight: 1 #10

## ----------------------- MPC ----------------------- ##
discretization_steps: 1
num_nodes: 50 # 50
integrator_dt: 0.02 #0.02  # 0.015
num_qp: 1

vel_bounds: [10, 10, 10,
             10, 10, 10,
             10, 10, 10,
             10, 10, 10]

joint_bounds_lb: [-0.802851, -3.0472, -2.69653,
                  -0.802851, -3.0472, -2.69653,
                  -0.802851, -3.0472, -2.69653,
                  -0.802851, -3.0472, -2.69653]

joint_bounds_ub: [0.802851, 4.18879, -0.916298,
                  0.802851, 4.18879, -0.916298,
                  0.802851, 4.18879, -0.916298,
                  0.802851, 4.18879, -0.916298]

num_switches: 2
force_bound: 125 #2500000 #150

swing_height: 0.075

num_polys: 3

x_des: 1
y_des: 1
xdot_des: 0
ydot_des: 0

gait_opt_freq: 5 #5

#ee_box_size: [.5, .5] #[0.12, 0.2], [0.15, 0.075], [0.15, 0.15]
ee_box_size: [0.15, 0.15] # 0.1, 0.12 is a good set of numbers -- how well it works is sensitive to this
# 0.15, 0.15 is good for diag

run_time_iterations: 6000 # 150 works well

foot_offset: 0.015  # 0.01 works well -- can be sensitive

force_cost: 0.000 # Note: without this cost, the problem is much more poorly
                  # conditioned and can return infeasible, also the derivative computations are much worse
                  # without this force cost, the QP cost is almost constant in steady state.

Q_diag: [1, 1, 1,          # linear momentum
         1, 1, 1,           # angular momentum
         300, 300, 7500,      # COM position
         200, 200, 200,     # body angle
         60000, 500, 10,         # FL leg
         60000, 500, 10,       # FR leg
         60000, 500, 10,       # RL leg
         60000, 500, 10]       # RR leg

# can try higher weight with less nodes
Q_srbd_diag: [140.0, 140.0, 12000, .01500, .0150, 10, 3000, 3000, 3000, 1, 1, 1] # 80, 80 for diag walking or 180, 180

# Q_srbd_diag: [80.0, 80.0, 800, .150, .50, 10, 700, 700, 700, 1, 1, 1]

# Walk to position weights:
# Q_srbd_diag: [30.0, 30.0, 500, 0.1, 0.1, 0.1, 5000, 5000, 5000, 0.1, 0.1, 0.1]
# could have x,y weight closer to 50
# gait opt every 2 iterations
# box of size 0.15, 0.15
# desired vels of 0
# - this also works with push recovery using 6,6 init velocity
# - clarabel can be lower than 1e-15
# line search size of 10
# force weight 0
# can make the gait opt happen every 5
# can also do diagonal hopping with 75, 50 on the positions weight, 2,2 on the des x,y and 0.15,0.15 on the box and 20 nodes at 0.05 discretization

# Velocity tracking weights:
# Q_srbd_diag: [0.0030, 0.0030, 30000, 30, 0.1, 0.1, 70000, 70000, 70000, 0.1, 0.1, 0.1]
# gait opt every 2 iterations
# box of size 0.15, 0.1
# desired vels of ~15
# clarabel tolerance should be arund 1e-15
# line search size of 10
# desired height 0.34
# force weight 0.001


mpc_verbosity: 0

## --- Temp --- ##
#viz_rate: 0.025
viz_rate: 0.001